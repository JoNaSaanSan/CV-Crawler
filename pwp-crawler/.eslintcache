[{"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\index.js":"1","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\reportWebVitals.js":"2","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\redux\\store.js":"3","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\App.js":"4","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\redux\\reducer.js":"5","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\ContactUsComponent.js":"6","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\HeaderComponent.js":"7","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\ProfileComponent.js":"8","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\HomeProfilesComponent.js":"9","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\redux\\action.js":"10","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\GoogleAuth.js":"11","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\mail\\MailForm.js":"12","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\CVComponent.js":"13"},{"size":770,"mtime":1611189217064,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1611080736225,"results":"16","hashOfConfig":"15"},{"size":166,"mtime":1612172316911,"results":"17","hashOfConfig":"15"},{"size":721,"mtime":1613301006954,"results":"18","hashOfConfig":"15"},{"size":493,"mtime":1612172316895,"results":"19","hashOfConfig":"15"},{"size":503,"mtime":1613301006965,"results":"20","hashOfConfig":"15"},{"size":1173,"mtime":1613301006969,"results":"21","hashOfConfig":"15"},{"size":14211,"mtime":1613302018458,"results":"22","hashOfConfig":"15"},{"size":6608,"mtime":1613302018530,"results":"23","hashOfConfig":"15"},{"size":170,"mtime":1612172316881,"results":"24","hashOfConfig":"15"},{"size":3141,"mtime":1612172316787,"results":"25","hashOfConfig":"15"},{"size":6151,"mtime":1613302018458,"results":"26","hashOfConfig":"15"},{"size":749,"mtime":1613301006963,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1grd2l6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\index.js",[],["58","59"],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\reportWebVitals.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\redux\\store.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\App.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\redux\\reducer.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\ContactUsComponent.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\HeaderComponent.js",["60"],"import { Link } from 'react-router-dom'\r\nimport store from '../redux/store';\r\nimport logo from '../branding.png';\r\nconst React = require('react');\r\nrequire('./HeaderComponent.css');\r\n\r\n\r\nstore.subscribe(() => store.getState().user.isSignedIn)\r\n\r\nclass HeaderComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSignedIn: store.getState().user.isSignedIn,\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    // Redux: Update Signed in State\r\n    store.subscribe(() => this.setState({ isSignedIn: store.getState().user.isSignedIn }))\r\n\r\n    return (\r\n      <div className=\"header-view\">\r\n\r\n        \r\n        <img src={logo} id= \"logo\"/>\r\n        \r\n\r\n        <div id=\"account-view\">\r\n          <Link to=\"/\" className=\"menu-item\">\r\n            Home </Link>\r\n          {this.state.isSignedIn ?\r\n            <Link to=\"/profile\" className=\"menu-item button\">\r\n              Profile </Link> : <Link to=\"/profile\" className=\"menu-item button\">\r\n              Log In </Link>}\r\n          <Link to=\"/contact\" className=\"menu-item\">\r\n            Contact Us </Link>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderComponent;\r\n","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\ProfileComponent.js",["61"],"import GoogleAuth from './GoogleAuth';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { connect } from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport store from '../redux/store';\r\nconst React = require('react');\r\nrequire('./ProfileComponent.css');\r\n\r\n\r\nclass ProfileComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            url: localStorage.getItem('cvURL') || '',\r\n            name: localStorage.getItem('Name') || '',\r\n            email: store.getState().user.email,\r\n            keywords: [],\r\n            email: '',\r\n            emailLimit: 5,\r\n            newInfo: false,\r\n\r\n            loggedIn: false,  //Name & CV-URL submitted\r\n            isSignedIn: store.getState().user.isSignedIn, //Google Auth Login \r\n        }\r\n\r\n        // Binds\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    //handles Change of the Slider \r\n    handleSliderChange = (event, newValue) => {\r\n        this.setState({ emailLimit: newValue });\r\n    };\r\n\r\n    //handles Change of the Keywords \r\n    handleChange = (keywords) => {\r\n        this.setState({ keywords })\r\n    };\r\n\r\n    //handles change of the textfields Name & URL\r\n    handleTextfieldChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    };\r\n\r\n\r\n/**\r\n * loads the users current settings and input from localstorage\r\n */\r\ncomponentDidMount = () =>{\r\n    const name = localStorage.getItem('Name');\r\n    const email = localStorage.getItem('Email');\r\n    const url = localStorage.getItem('cvURL');\r\n    var loggedIn = localStorage.getItem('loggedIn');\r\n    var isSignedIn = localStorage.getItem('signedIn');\r\n    var keywords = localStorage.getItem('Keywords');\r\n    var emailLimit = localStorage.getItem('emailLimit');\r\n\r\n        this.setState({ //set state to what is in the local storage\r\n            name: name,\r\n            email: email,\r\n            url: url,\r\n            loggedIn: loggedIn,\r\n            issignedIn: isSignedIn\r\n        })\r\n\r\n       if(keywords !== null && emailLimit !== 5){  //if they are not equal to the dafault values\r\n            this.setState({  //set state to what is in the local storage\r\n                keywords: JSON.parse(keywords), \r\n                emailLimit: emailLimit\r\n            })\r\n        }\r\n    console.log(this.state);\r\n}\r\n\r\n/**\r\n * handles when Download PDF Button is clicked\r\n */\r\nhandleDownload = (event) => {\r\n    event.preventDefault(); //prevent reload\r\n    const downloadCV = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            url: this.state.url\r\n        }\r\n    axios.post('http://localhost:3001/downloadCV', downloadCV) //send POST-request to /downloadCV\r\n    .then(res=>{ console.log(res.data)})\r\n    .then(alert(\"Just a moment..\")) //because this takes longer then you would expect\r\n    .then(() => axios.get('/fetch-pdf', { responseType: 'blob' })) //sends GET-request in order to fetch the actual PDF\r\n      .then((res) => {\r\n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' }); //A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format.\r\n        saveAs(pdfBlob, 'myCV.pdf'); //show save file as dialogue\r\n      })\r\n};\r\n\r\n\r\n/**\r\n * handles Request to Delete all the user data from a specific user from the database\r\n * (called when delete account is clicked)\r\n */\r\nhandleDelete = (event) => {\r\n    event.preventDefault(); //prevent reload\r\n    const deleteUser = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        url: this.state.url\r\n    }\r\n    axios.post('http://localhost:3001/deleteUser', deleteUser).then(res=>{ //send POST-request to /deleteUser\r\n        console.log(res.data)\r\n        if(res.data.message === \"User deleted successfully\"){ //if success\r\n            alert(\"Your Account was deleted. If you want to rejoin you need to register again.\"); //Inform the user about the fact that he deleted his account\r\n            this.setState({\r\n                loggedIn: false //logout \r\n            })\r\n        }\r\n    })\r\n};\r\n\r\n\r\n/**\r\n * sends the Registration request\r\n * (called when register button is clicked)\r\n */\r\nhandleRegistration = (event) =>{\r\n    console.log(this.state);\r\n    event.preventDefault();\r\n    const userRegistration = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        url: this.state.url,\r\n        newInfo: true\r\n    }\r\n    axios.post('http://localhost:3001/userRegistration',userRegistration).then(res=>{ //send POST-request to /userRegistration\r\n        console.log(res.data)\r\n        if(res.data.message === \"Field empty!\"){\r\n            alert(\"You need to Sign In with Google and fill out the Name and CVURL field!\");\r\n        }else{\r\n            if(res.data.message === \"User with this name, email or URL already exists!\"){\r\n            alert(\"User with this name, email or URL already exists! Please choose another name.\");\r\n            }else{\r\n        if(res.data.message === \"User saved successfully\"){\r\n            this.setState({\r\n                loggedIn: true //login user after successful registration\r\n            })\r\n            localStorage.setItem( 'Name', this.state.name );        //puts all the current data from state into localstorage\r\n            localStorage.setItem('Email', this.state.email);\r\n            localStorage.setItem( 'cvURL', this.state.url);\r\n            localStorage.setItem('loggedIn',this.state.loggedIn);\r\n            localStorage.setItem('signedIn',this.state.isSignedIn);\r\n            console.log(localStorage);\r\n            alert(\"You are successfully registered!\");\r\n        }\r\n    }}})\r\n\r\n}\r\n\r\n/**\r\n * sends the login request\r\n * (called when Login Button is clicked)\r\n */\r\nhandleLogin = (event) =>{\r\n    console.log(this.state);\r\n    event.preventDefault();\r\n    const userLogin = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        url: this.state.url,\r\n        newInfo: false\r\n    }\r\n    axios.post('http://localhost:3001/userLogin',userLogin).then(res=>{\r\n        console.log(res.data)\r\n        if(res.data.message === \"Field empty!\"){\r\n            alert(\"You need to Sign In with Google and fill out the Name and CVURL field!\");\r\n        }else{ \r\n            if(res.data.message === \"User does not exist!\"){\r\n                alert(\"Please Register before logging in!\");\r\n            }\r\n            if(res.data.message === \"User exists!\"){\r\n            this.setState({\r\n                loggedIn: true\r\n            })\r\n            alert(\"You are successfully logged in!\");\r\n            axios.post('/getUserSettings', userLogin ).then(res =>{ //fetches the current user settings\r\n                console.log(res.data);\r\n                this.setState({keywords: res.data.keywords, emailLimit: res.data.emailLimit});\r\n                localStorage.setItem('Keywords',JSON.stringify(res.data.keywords));\r\n                localStorage.setItem('emailLimit', res.data.emailLimit);\r\n            \r\n            })\r\n            localStorage.setItem( 'Name', this.state.name);\r\n            localStorage.setItem('Email', this.state.email);\r\n            localStorage.setItem( 'cvURL', this.state.url);\r\n            localStorage.setItem('loggedIn',this.state.loggedIn);\r\n            localStorage.setItem('signedIn',this.state.isSignedIn);\r\n            console.log(localStorage);\r\n            \r\n        }\r\n    }})\r\n\r\n}\r\n\r\n/**\r\n * handles Logout\r\n * (called when logout button is clicked)\r\n */\r\nhandleLogout = () =>{\r\n    localStorage.clear(); //clear local storage\r\n    alert('You were successfully logged out!');\r\n    window.location.reload(); // reloads the page so that the login page is being reset\r\n}\r\n\r\n\r\n/**\r\n * handles user Settings and sends the request to save them, also fetches them to display them immediately\r\n *(handles when the save Button is being clicked) \r\n */\r\nsaveSettings = (event) => {\r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        const userSettings = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            url: this.state.url,\r\n            keywords: this.state.keywords,\r\n            emailLimit: this.state.emailLimit,\r\n            newInfo: true,\r\n        }\r\n        axios.post('http://localhost:3001/updateSettings', userSettings).then(res=>{ //sends the post-request with the user settings to /updateSettings\r\n        console.log(res.data)\r\n        if(res.data.message === \"Settings saved successfully\"){\r\n            alert(\"Your Settings were saved successfully!\");\r\n            axios.post('/getUserSettings', userSettings ).then(res =>{ //fetches the current user settings\r\n                console.log(res.data);\r\n                this.setState({keywords: res.data.keywords, emailLimit: res.data.emailLimit}); //and saves them to the state\r\n                localStorage.setItem('Keywords',JSON.stringify(res.data.keywords)); //and also to the local storage\r\n                localStorage.setItem('emailLimit', res.data.emailLimit);\r\n                localStorage.setItem( 'cvURL', res.data.cvURL);\r\n            \r\n            })\r\n        }else{\r\n            alert(\"Please make sure your name and cvURL are right!\");\r\n        }\r\n    })\r\n};\r\n\r\n    render() {\r\n\r\n        // Value of Slider \r\n        function valuetext(value) {\r\n            return `${value}`;\r\n        }\r\n        // Redux: Update Signed in State\r\n        store.subscribe(() => this.setState({ isSignedIn: store.getState().user.isSignedIn, email: store.getState().user.email }))\r\n  \r\n        return (\r\n            <div className=\"profile-page\">\r\n                <div className=\"signup-view\">\r\n                { this.state.loggedIn && this.state.isSignedIn ?\r\n                    <h1>Welcome to the matching tool!</h1>:\r\n                    <h1>Sign up to the matching tool!</h1>}\r\n                    <div className=\"signup-box\">\r\n                        <GoogleAuth />\r\n                        <div id=\"add-name\">\r\n                             <TextField id=\"outlined-basic\" value={this.state.name} label=\"Your Name\" name=\"name\" onChange={this.handleTextfieldChange} variant=\"outlined\" />\r\n                         </div>\r\n                        <div id=\"add-urls\">\r\n                            <TextField id=\"outlined-basic\" value={this.state.url} onChange={this.handleTextfieldChange} name=\"url\" label=\"Your CV URL\" variant=\"outlined\" />\r\n                        </div>\r\n                        { this.state.loggedIn && this.state.isSignedIn ?\r\n                        <div></div>:\r\n                        <div>\r\n                            <Button variant=\"contained\" onClick={this.handleRegistration} color=\"primary\">Register</Button>\r\n                        </div>\r\n                        }\r\n                        { this.state.loggedIn && this.state.isSignedIn ?\r\n                        <div>\r\n                            <Button variant=\"contained\" onClick={this.handleLogout} color=\"primary\">Logout</Button>\r\n                        </div> :\r\n                        <div>\r\n                        <Button variant=\"contained\" onClick={this.handleLogin} color=\"primary\">Login</Button>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    <Divider variant=\"middle\" />\r\n                    {  this.state.loggedIn && this.state.isSignedIn ?\r\n                    <div className=\"settings-box\">\r\n                        <h2>Settings</h2>\r\n                        <div>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.handleDownload}>Download my CV as PDF</Button>\r\n                        </div> \r\n                        <div>\r\n                             Insert Matching Keywords:\r\n                         </div>\r\n                            <div>\r\n                                <TagsInput inputProps={{ className: 'react-tagsinput-input', placeholder: 'Keywords' }} value={this.state.keywords} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                Maximum E-Mails per day\r\n                        </div>\r\n                        <div>\r\n                            <Slider\r\n                                name=\"emailLimit\"\r\n                                defaultValue={5}\r\n                                value= {this.state.emailLimit}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"Maximum E-Mails per day\"\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={10}\r\n                                valueLabelDisplay=\"auto\"\r\n                                onChangeCommitted={this.handleSliderChange}\r\n                            />                \r\n                            </div>\r\n                            <div>\r\n                                <Button variant=\"contained\" onClick={this.saveSettings} color=\"primary\">Save</Button>\r\n                            </div>\r\n                            <Divider id=\"div\" variant=\"middle\" />\r\n                            <div>\r\n                                <div>\r\n                                    <span class=\"label label-default\">Delete all my information.</span>\r\n                                </div>\r\n                                <div>\r\n                                    <Button variant=\"outline-primary\" color=\"primary\" onClick={this.handleDelete}>Delete account</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div></div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => state.partOfState\r\nexport default connect(mapStateToProps)(ProfileComponent);\r\n","C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\HomeProfilesComponent.js",["62","63","64"],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\redux\\action.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\GoogleAuth.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\mail\\MailForm.js",[],"C:\\Users\\Jonathan\\Documents\\University\\PWP\\pwp-user-management\\pwp-crawler\\src\\components\\CVComponent.js",["65","66"],"import { Button, TextField } from '@material-ui/core';\r\nconst React = require('react');\r\nrequire('./CVComponent.css');\r\n\r\n\r\nclass CVComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        //styling of div container\r\n        const myStyle = {\r\n            backgroundColor: this.props.color,\r\n            height: this.props.height + \"px\"\r\n        }\r\n\r\n        console.log(this.props.key)\r\n\r\n        return (\r\n            <div className=\"cv_container\" style={myStyle}>\r\n                <h1 className=\"cv-name\">\r\n                    {this.props.name}\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CVComponent;\r\n\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":27,"column":9,"nodeType":"73","endLine":27,"endColumn":37},{"ruleId":"74","severity":1,"message":"75","line":23,"column":13,"nodeType":"76","messageId":"77","endLine":23,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":1,"column":18,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":144,"column":25,"nodeType":"73","endLine":144,"endColumn":77},{"ruleId":"78","severity":1,"message":"79","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":1,"column":18,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'email'.","ObjectExpression","unexpected","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]