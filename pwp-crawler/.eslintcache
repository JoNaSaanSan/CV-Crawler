[{"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\index.js":"1","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\App.js":"2","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\redux\\store.js":"4","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\redux\\reducer.js":"5","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\HomeComponent.js":"6","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\HomeProfilesComponent.js":"7","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\HeaderComponent.js":"8","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\ProfileComponent.js":"9","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\redux\\action.js":"10","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\CVComponent.js":"11","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\GoogleAuth.js":"12"},{"size":770,"mtime":1611513417983,"results":"13","hashOfConfig":"14"},{"size":648,"mtime":1612176378902,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1611513417984,"results":"16","hashOfConfig":"14"},{"size":166,"mtime":1611513417984,"results":"17","hashOfConfig":"14"},{"size":493,"mtime":1611513417984,"results":"18","hashOfConfig":"14"},{"size":2184,"mtime":1611513417982,"results":"19","hashOfConfig":"14"},{"size":3636,"mtime":1612781040872,"results":"20","hashOfConfig":"14"},{"size":1059,"mtime":1611513417981,"results":"21","hashOfConfig":"14"},{"size":12665,"mtime":1612990100071,"results":"22","hashOfConfig":"14"},{"size":170,"mtime":1611513417983,"results":"23","hashOfConfig":"14"},{"size":1159,"mtime":1612176378903,"results":"24","hashOfConfig":"14"},{"size":3141,"mtime":1611513417981,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1t8tc6a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\index.js",[],["56","57"],"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\App.js",["58"],"import './App.css';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport HomeComponent from './components/HomeComponent';\r\nimport HomeProfilesComponent from './components/HomeProfilesComponent';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ProfileComponent from './components/ProfileComponent';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <main>\r\n      <HeaderComponent />\r\n      <Switch>\r\n        <Route path=\"/\" component={HomeProfilesComponent} exact />\r\n        <Route path=\"/profile\" component={ProfileComponent} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\redux\\store.js",[],"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\redux\\reducer.js",[],"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\HomeComponent.js",[],"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\HomeProfilesComponent.js",["59","60","61"],"import { Button, TextField } from '@material-ui/core';\r\nimport CVComponent from './CVComponent';\r\nimport StackGrid from \"react-stack-grid\";\r\nimport profilepic from '../profilepic.png'\r\nconst React = require('react');\r\nrequire('./HomeProfilesComponent.css');\r\n\r\nclass HomeProfilesComponent extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    openPopup(){\r\n        document.querySelector('.bg-modal').style.display = \"flex\";\r\n        document.body.style.overflow = \"hidden\";\r\n\r\n    }\r\n\r\n    closePopup(){\r\n        document.querySelector('.bg-modal').style.display = \"none\";\r\n        document.body.style.overflow = \"auto\";\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home_container\">\r\n                <div className = \"buttons_container\">\r\n                    <button className = \"buttons\">All Profiles</button>\r\n                    <button className = \"buttons\">Matched Profiles</button>\r\n               </div>\r\n               \r\n               <StackGrid columnWidth={350} className=\"stackgrid\">\r\n                    <div key=\"key1\" className = \"cv-element\" onClick={this.openPopup}>\r\n                        <CVComponent name=\"Max Mustermann\"/>\r\n                    </div>\r\n                    <div key=\"key2\" className = \"cv-element\">\r\n                        <CVComponent name=\"Anja Scherer\"/>\r\n                    </div>\r\n                    <div key=\"key3\" className = \"cv-element\">\r\n                        <CVComponent name=\"Simon Schmitz\"/>\r\n                    </div>\r\n                    <div key=\"key4\" className = \"cv-element\">\r\n                        <CVComponent name=\"Anna Huber\"/>\r\n                    </div>\r\n                    <div key=\"key5\" className = \"cv-element\">\r\n                        <CVComponent name=\"Miriam Schnitz\"/>\r\n                    </div>\r\n                    <div key=\"key6\" className = \"cv-element\">\r\n                        <CVComponent name=\"Simon Hoffinger\"/>\r\n                    </div>\r\n                    <div key=\"key7\" className = \"cv-element\">\r\n                        <CVComponent name=\"Thomas Riegner\"/>\r\n                    </div>\r\n                    <div key=\"key8\" className = \"cv-element\">\r\n                        <CVComponent name=\"Paula Oberacher\"/>\r\n                    </div>\r\n                    <div key=\"key9\" className = \"cv-element\">\r\n                        <CVComponent name=\"Johannes Niepe\"/>\r\n                    </div>\r\n                    <div key=\"key10\" className = \"cv-element\">\r\n                        <CVComponent name=\"Andreas Barth\"/>\r\n                    </div>\r\n                    <div key=\"key11\" className = \"cv-element\">\r\n                        <CVComponent name=\"Veronika Wimmer\"/>\r\n                    </div>\r\n                    <div key=\"key12\" className = \"cv-element\">\r\n                        <CVComponent name=\"Maximilian Randersdorfer\"/>\r\n                    </div>\r\n               </StackGrid>\r\n\r\n               <div class=\"bg-modal\">\r\n                    <div class=\"modal-contents\">\r\n                        <div class=\"close\" onClick={this.closePopup}>+</div>\r\n                        <img className=\"profile-picture\" src={profilepic} />\r\n                        <h1>Max Mustermann</h1>\r\n                        <p>max.mustermann@gmail.com</p>\r\n                        <a href=\"www.google.de\">CV Website</a>\r\n                        <hr/>\r\n                        <h3>Keywords</h3>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeProfilesComponent;\r\n","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\ProfileComponent.js",["62"],"import GoogleAuth from './GoogleAuth';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { connect } from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport store from '../redux/store';\r\nconst React = require('react');\r\nrequire('./ProfileComponent.css');\r\n\r\n\r\nclass ProfileComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            url: localStorage.getItem('cvURL') || '',\r\n            name: localStorage.getItem('Name') || '',\r\n            email: store.getState().user.email,\r\n            keywords: [],\r\n            email: '',\r\n            emailLimit: 5,\r\n            newInfo: true,\r\n\r\n            loggedIn: false,  //Name & CV-URL submitted\r\n            isSignedIn: store.getState().user.isSignedIn, //Google Auth Login \r\n        }\r\n\r\n        // Binds\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    //handles Change of the Slieder field \r\n    handleSliderChange = (event, newValue) => {\r\n        this.setState({ emailLimit: newValue });\r\n    };\r\n\r\n    //handles Change of the Keywords \r\n    handleChange = (keywords) => {\r\n        this.setState({ keywords })\r\n    };\r\n\r\n    //handles change of the textfields Name & URL\r\n    handleTextfieldChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    };\r\n\r\n\r\n//loads the users current settings and input \r\ncomponentDidMount = () =>{\r\n    console.log(localStorage);\r\n    const name = localStorage.getItem('Name');\r\n    const url = localStorage.getItem('cvURL');\r\n    var loggedIn = localStorage.getItem('loggedIn');\r\n    var isSignedIn = localStorage.getItem('signedIn');\r\n    var keywords = localStorage.getItem('Keywords');\r\n    var emailLimit = localStorage.getItem('emailLimit');\r\n    \r\n        this.setState({\r\n            name: name,\r\n            url: url,\r\n            loggedIn: loggedIn,\r\n            issignedIn: isSignedIn\r\n        })\r\n       if(keywords !== null && emailLimit !== 5){\r\n            this.setState({\r\n                keywords: JSON.parse(keywords),\r\n                emailLimit: emailLimit\r\n            })\r\n        }\r\n    console.log(this.state);\r\n}\r\n\r\n//handles when Download PDF Button is clicked\r\nhandleDownload = (event) => {\r\n    event.preventDefault();\r\n    const downloadCV = {\r\n            name: this.state.name,\r\n            url: this.state.url\r\n        }\r\n    axios.post('http://localhost:3001/downloadCV', downloadCV)\r\n    .then(res=>{ console.log(res.data)})\r\n    .then(alert(\"Just a moment..\"))\r\n    .then(() => axios.get('/fetch-pdf', { responseType: 'blob' }))\r\n      .then((res) => {\r\n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n        saveAs(pdfBlob, 'myCV.pdf');\r\n      })\r\n};\r\n\r\n\r\n//handles Request to Delete all the user data from a specific user from the database\r\nhandleDelete = (event) => {\r\n    console.log(this.state);\r\n    event.preventDefault();\r\n    const deleteUser = {\r\n        name: this.state.name,\r\n        url: this.state.url\r\n    }\r\n    axios.post('http://localhost:3001/deleteUser', deleteUser).then(res=>{\r\n        console.log(res.data)\r\n        if(res.data.message === \"User deleted successfully\"){\r\n            alert(\"Your Account was deleted. If you want to rejoin you need to register again.\");\r\n            this.setState({\r\n                loggedIn: false\r\n            })\r\n        }\r\n    })\r\n};\r\n\r\n\r\n//sends the Registration info to the backend \r\nhandleSubmit = (event) =>{\r\n    console.log(this.state);\r\n    event.preventDefault();\r\n    const userRegistration = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        url: this.state.url\r\n    }\r\n    axios.post('http://localhost:3001/userRegistration',userRegistration).then(res=>{\r\n        console.log(res.data)\r\n        if(res.data.message === \"Field empty!\"){\r\n            alert(\"You need to Sign In with Google and fill out the Name and CVURL field!\");\r\n        }else{\r\n            if(res.data.message === \"User with this name, email or URL already exists!\"){\r\n            alert(\"User with this name, email or URL already exists! Please choose another name.\");\r\n            }else{\r\n        if(res.data.message === \"User saved successfully\"){\r\n            this.setState({\r\n                loggedIn: true\r\n            })\r\n            localStorage.setItem( 'Name', this.state.name );\r\n            localStorage.setItem( 'cvURL', this.state.url);\r\n            localStorage.setItem('loggedIn',this.state.loggedIn);\r\n            localStorage.setItem('signedIn',this.state.isSignedIn);\r\n            console.log(localStorage);\r\n            alert(\"You are successfully registered!\");\r\n        }\r\n    }}})\r\n\r\n}\r\n\r\n//sends the Login info to the backend \r\nhandleLogin = (event) =>{\r\n    console.log(this.state);\r\n    event.preventDefault();\r\n    const userLogin = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        url: this.state.url\r\n    }\r\n    axios.post('http://localhost:3001/userLogin',userLogin).then(res=>{\r\n        console.log(res.data)\r\n        if(res.data.message === \"Field empty!\"){\r\n            alert(\"You need to Sign In with Google and fill out the Name and CVURL field!\");\r\n        }else{ \r\n            if(res.data.message === \"User does not exist!\"){\r\n                alert(\"Please Register before logging in!\");\r\n            }\r\n            if(res.data.message === \"User exists!\"){\r\n            this.setState({\r\n                loggedIn: true\r\n            })\r\n            alert(\"You are successfully logged in!\");\r\n            axios.post('/getUserSettings', userLogin ).then(res =>{ //fetches the current user settings\r\n                console.log(res.data);\r\n                this.setState({keywords: res.data.keywords, emailLimit: res.data.emailLimit});\r\n                localStorage.setItem('Keywords',JSON.stringify(res.data.keywords));\r\n                localStorage.setItem('emailLimit', res.data.emailLimit);\r\n            \r\n            })\r\n            localStorage.setItem( 'Name', this.state.name);\r\n            localStorage.setItem( 'cvURL', this.state.url);\r\n            localStorage.setItem('loggedIn',this.state.loggedIn);\r\n            localStorage.setItem('signedIn',this.state.isSignedIn);\r\n            console.log(localStorage);\r\n            \r\n        }\r\n    }})\r\n\r\n}\r\n\r\nhandleLogout = () =>{\r\n    localStorage.clear();\r\n    alert('You were successfully logged out!');\r\n    window.location.reload(); // reloads the page so that the login page is being reset\r\n}\r\n\r\n\r\n//handles when the save Button is being clicked and saves the User settings to the right user \r\nhandleClick = (event) => {\r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        const userSettings = {\r\n            name: this.state.name,\r\n            url: this.state.url,\r\n            keywords: this.state.keywords,\r\n            emailLimit: this.state.emailLimit,\r\n            newInfo: this.state.newInfo,\r\n        }\r\n        axios.post('http://localhost:3001/updateSettings', userSettings).then(res=>{ //sends the post-request with the user settings\r\n        console.log(res.data)\r\n        if(res.data.message === \"Settings saved successfully\"){\r\n            alert(\"Your Settings were saved successfully!\");\r\n            axios.post('/getUserSettings', userSettings ).then(res =>{ //fetches the current user settings\r\n                console.log(res.data);\r\n                this.setState({keywords: res.data.keywords, emailLimit: res.data.emailLimit});\r\n                localStorage.setItem('Keywords',JSON.stringify(res.data.keywords));\r\n                localStorage.setItem('emailLimit', res.data.emailLimit);\r\n            \r\n            })\r\n        }else{\r\n            alert(\"Please make sure your name and cvURL are right!\");\r\n        }\r\n    })\r\n};\r\n\r\n    render() {\r\n\r\n        // Value of Slider \r\n        function valuetext(value) {\r\n            return `${value}`;\r\n        }\r\n        // Redux: Update Signed in State\r\n        store.subscribe(() => this.setState({ isSignedIn: store.getState().user.isSignedIn, email: store.getState().user.email }))\r\n  \r\n        return (\r\n            <div className=\"profile-page\">\r\n                <div className=\"signup-view\">\r\n                { this.state.loggedIn && this.state.isSignedIn ?\r\n                    <h1>Welcome to the matching tool!</h1>:\r\n                    <h1>Sign up to the matching tool!</h1>}\r\n                    <div className=\"signup-box\">\r\n                        <GoogleAuth />\r\n                        <div id=\"add-name\">\r\n                             <TextField id=\"outlined-basic\" value={this.state.name} label=\"Your Name\" name=\"name\" onChange={this.handleTextfieldChange} variant=\"outlined\" />\r\n                         </div>\r\n                        <div id=\"add-urls\">\r\n                            <TextField id=\"outlined-basic\" value={this.state.url} onChange={this.handleTextfieldChange} name=\"url\" label=\"Your CV URL\" variant=\"outlined\" />\r\n                        </div>\r\n                        { this.state.loggedIn && this.state.isSignedIn ?\r\n                        <div></div>:\r\n                        <div>\r\n                            <Button variant=\"contained\" onClick={this.handleSubmit} color=\"primary\">Register</Button>\r\n                        </div>\r\n                        }\r\n                        { this.state.loggedIn && this.state.isSignedIn ?\r\n                        <div>\r\n                            <Button variant=\"contained\" onClick={this.handleLogout} color=\"primary\">Logout</Button>\r\n                        </div> :\r\n                        <div>\r\n                        <Button variant=\"contained\" onClick={this.handleLogin} color=\"primary\">Login</Button>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    <Divider variant=\"middle\" />\r\n                    {  this.state.loggedIn && this.state.isSignedIn ?\r\n                    <div className=\"settings-box\">\r\n                        <h2>Settings</h2>\r\n                        <div>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.handleDownload}>Download my CV as PDF</Button>\r\n                        </div> \r\n                        <div>\r\n                             Insert Matching Keywords:\r\n                         </div>\r\n                            <div>\r\n                                <TagsInput inputProps={{ className: 'react-tagsinput-input', placeholder: 'Keywords' }} value={this.state.keywords} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                Maximum E-Mails per day\r\n                        </div>\r\n                        <div>\r\n                            <Slider\r\n                                name=\"emailLimit\"\r\n                                defaultValue={5}\r\n                                value= {this.state.emailLimit}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"Maximum E-Mails per day\"\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={10}\r\n                                valueLabelDisplay=\"auto\"\r\n                                onChangeCommitted={this.handleSliderChange}\r\n                            />                \r\n                            </div>\r\n                            <div>\r\n                                <Button variant=\"contained\" onClick={this.handleClick} color=\"primary\">Save</Button>\r\n                            </div>\r\n                            <Divider id=\"div\" variant=\"middle\" />\r\n                            <div>\r\n                                <div>\r\n                                    <span class=\"label label-default\">Delete all my information.</span>\r\n                                </div>\r\n                                <div>\r\n                                    <Button variant=\"outline-primary\" color=\"primary\" onClick={this.handleDelete}>Delete account</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div></div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => state.partOfState\r\nexport default connect(mapStateToProps)(ProfileComponent);\r\n","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\redux\\action.js",[],["63","64"],"C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\CVComponent.js",["65","66"],"import { Button, TextField } from '@material-ui/core';\r\nconst React = require('react');\r\nrequire('./CVComponent.css');\r\n\r\n\r\nclass CVComponent extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n    getRandomHeight() {\r\n        var max = 400;\r\n        var min = 150;\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    getRandomColor() {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n      }\r\n      \r\n//style={{marginRight: spacing + 'em'}} \r\n//style={{backgroundColor: this.getRandomColor()}, {height: this.getRandomHeight() + \"px\"}\r\n\r\n    render() {\r\n        const myStyle = {\r\n            backgroundColor: this.getRandomColor(),\r\n            height: this.getRandomHeight() + \"px\"\r\n        }\r\n        return (\r\n            <div className=\"cv_container\"  style={myStyle}>\r\n               <h1 className=\"cv-name\">{this.props.name}</h1>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CVComponent;\r\n","C:\\Users\\Admin\\Google Drive\\Uni\\Master Mensch-Computer-Interaktion\\20_WS\\PWP\\usermanagement\\pwp-user-management\\pwp-crawler\\src\\components\\GoogleAuth.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":21},{"ruleId":"71","severity":1,"message":"75","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":16},{"ruleId":"71","severity":1,"message":"76","line":1,"column":18,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":80,"column":25,"nodeType":"79","endLine":80,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":23,"column":13,"nodeType":"82","messageId":"83","endLine":23,"endColumn":18},{"ruleId":"67","replacedBy":"84"},{"ruleId":"69","replacedBy":"85"},{"ruleId":"71","severity":1,"message":"75","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":16},{"ruleId":"71","severity":1,"message":"76","line":1,"column":18,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'HomeComponent' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'TextField' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'email'.","ObjectExpression","unexpected",["86"],["87"],"no-global-assign","no-unsafe-negation"]